JS функции


breakpoints - массив брейкпоинтов
	- также, поддерживаются переменные:
		- breakpointLG
		- breakpointMD
		- breakpointSM
		- breakpointXL


- название
	- пример
	- расшифровка


[parallax] - паралакс фоновой картинки для блока
	parallax="картинка|амплитуда паралакса"


[showpassword] - показать/скрыть пароль
	<i class="fa fa-eye" showpassword></i>
	внутрь .field, рядом с input[type="password"]




[touch] - дропдаун
	touch="opened"
	при клике родительский элемент получит класс opened (тот, что указан в атрибуте touch)




[multicode] - Выбор телефонного кода в поле
	<input type="tel" multicode="rus" code="+7" />
	-rus ukr kaz bel uzb azr arm kyr mol taj



[phonemask] - маска ввода номера телефона
	<input type="tel" phonemask="(^^^) ^^^-^^-^^" />
	- ^ - цифра
	- & - символ
	- * - любой




$(field).number(true, 0, ',', ' '); - форматирование числа в инпуте




[mask] - маска ввода данных



[numberformat] - формат числа
	numberformat="2|.| "




[parallax] - параллакс
	parallax="imageSrc|speed"




.phone ,[phone] .whatsapp, [whatsapp] .email, [email] - ссылки для действия из браузера



[ddrtextarealist] - Выпадающая форма для заполнения textarea. Для textarea добавляется атрибут ddrtextarealist с настройками полей.
	Пример: ddrtextarealist="select;тип;text:однострочное поле,file:файл;w-10|text;имя поля;;w-15|text;лейбл;;w-15|text;значения|text;правила|text;маска"

	Для каждого поля задаются 4 параметра:
		- тип поля: input[text, number, checkbox], select.
		- лейбл
		- данные [ключ:значение через запятую]
		- класс



ddraddlist - Выпадающая форма для заполнения для textarea
	ddraddlist="select;тип;text:однострочное поле,file:файл;w-10|text;имя поля;;w-15|text;лейбл;;w-15|text;значения|text;правила|text;маска"
	Для каждого поля задаются 4 параметра:
		- тип поля: input[text, number, checkbox], select.
		- лейбл
		- данные [ключ:значение через запятую]
		- класс

	-каждое поле разделяется знаком |
	-каждый параметр разделяется знаком ; или знаком, заданным атрибутом join
	-внутри данные разделяются запятой
	-у данных типа (ключ -> значение) разделение знаком :




[ddrsort] - Сортировка списков
	<a ddrsort="score" ddrsortgroup="foo" class="ddrsortactive" ddrorder="desc"></a>
	<a ddrsort="rating" ddrsortgroup="foo" ddrorder="asc"></a>

	<ul>
		<li ddrsort-score="{{значение}}" ddrsort-rating="{{значение}}"></li>
		<li ddrsort-score="{{значение}}" ddrsort-rating="{{значение}}"></li>
		<li ddrsort-score="{{значение}}" ddrsort-rating="{{значение}}"></li>
	</ul>

	- ddrsort="score" - элемент, по которому производится сортировка
	- ddrsortgroup="foo" - присвоение группы, в случае, если блоков сортировок несколько на одной странице
	- class="ddrsortactive" - изначально заданая сортировка (появляется иконка сортировки)
	- ddrorder="desc" - изначальное направление сортировки






thisDevice - Определение устройства: desktop или mobile





ddrCarousel - Карусель на основе Slick слайдера
	- arrowLeft: false Нужно делать невидимыми. Создать класс visible при котором стрелка должна отображаться
	- arrowRight: false Нужно делать невидимыми. Создать класс visible при котором стрелка должна отображаться
	- autoplay: false
	- speed: 3000
	- loop: false
	- pauseOnHover: true
	- fade: false
	- dotsSelector: false контеинер дял точек навигации. Активный с классом active
	- response: false [1, 'sm:2', 'md:2', 'lg:3', 'xl:4'], первый элемент, сколько изначально показывать слайдов. Далее, брейкпоинт:кол-во слайдов
	- accessBrPoints: false {768: 992} брейкпоинты от и до - когда карусель будет активироваться
	- beforeChange: false
	- unitHeight: false выровнить высоту блоков карусели (в значение можнно передать брейкпоинт с которого будет активироваться функция)





ddrFloatingBlock - плавающий блок как на сайте Спортстолица
	- отступ от верха и низа








tapEventInfo - Передать в функцию event
	tapEventInfo(event, {attribute: 'любое зачение'});
	- можно передать объект с предполагаемым атрибутом или склассом {attribute: 'любое зачение'} или {class: ['любое зачение 1', 'любое зачение 2']}
	-возвращает аттрибуты и классы элемента или true/false если находит заданный атрибут(ы) или класс(ы)




pageReload() - перезагрузка страницы




isJson() - Является ли строка json
	- строка




isInt() - Является ли строка целым числом



isFloat() - Является ли строка числом с плавающей точкой




hasIn() -
	hasIn(data, elem, isKey)
	проверить наличие элемента в массиве или объекте
		- массив или объект
		- искомый элемент
		- является ли ключем искомый элемент

	ВНИМАНИЕ!!! Может возвращать 0 - это найденный индекс




containsMat - проверяет наличие матных слов в тексте
	- строка




getFileName() - Разделяет название файла на само название и расширение.
	getFileName(fileName, nameOrExt, nameLimit)
	возвращает:
		- 1: название
		- 2: расширение
	Третий аргумент: обрезает название до заданного количества символов





compressorjs - сжать файл "налету" в браузере
	document.getElementById('file').addEventListener('change', (e) => {
	  const file = e.target.files[0];

	  if (!file) {
	    return;
	  }

	  new Compressor(file, {
	    quality: 0.6,
	    mimeType,
		width:,
		height:,
		minWidth,
		minHeight,
		maxWidth,
		maxHeight,
	    success(result) {
	      const formData = new FormData();

	      // The third parameter is required for server
	      formData.append('file', result, result.name);

	      // Send the compressed image file to server with XMLHttpRequest.
	      axios.post('/path/to/upload', formData).then(() => {
	        console.log('Upload success');
	      });
	    },
	    error(err) {
	      console.log(err.message);
	    },
	  });
	});









disableDrop - Запрет на перемещение файла в заданную обасть
	$(селектор).disableDrop(extClasses, callback)
		- массив классов
		- каллбэк (может быть первым аргументом)





setAttrib
	Добавление атрибута
		- название атрибута
		- значение



removeAttrib
	Удаление атрибута
		- название атрибута




hasAttr
	Проверка наличия атрибута
		- название атрибута








disableScroll - Запретить скролл




enableScroll - Разрешить скролл




errorLabel - Повесить ошибку на input
	- html код





scrollFix - Зафиксировать элемент при скролле
	- cls: класс, который назначается фиксируемоему элементу
	- pos: положение относительно начала документа, при котором назначается скролл





random - Генерация рандомного числа
	random(min, max)
	- минимальное число
	- максимальное число






generateCode - Генерация кода
	- маска: l - буква с нижним регистром, L - буква с верхним регистром, n - цифра






getContenteditable - Получить контент из блока [contenteditable]
	- селектор




getArgs - Аргументы с GET данных
	- вернуть конкретный аргумент





urlExists - Проверка существования файла
	- путь до файла







showError - Вывод ошибки
	- объект данных ошибки из AJAX





getAjaxHtml - Генерация HTML через AJAX





changeInputs - блок, при изменении элементов внутри которого, происходит каллбэк
	$(селектор).changeInputs(каллбэк, исключения)
		- calback(thisItem, eData)
			- измененный элемент
			- данные
		- селекторы-исключения, при которых не будет срабатывать функция. Пример: ['[attrib1]', '#id2', ...]



setMulticode - мультикод




initEditors - Summernote





clientFileManager - Файлменеджер
	- Каллбэки
		- onOpenFilemanager: событие при открытии окна файлменеджера. Передается селектор файла, на который кликнули
		- onRemoveFile: событие при удалении файла. Передается селектор файла
		- onChooseFile: событие при выборе файла. Передается селектор файла









ddrTabs - табы
	tabTitlesAttr: аттрибут кнопок для управления табами
	tabsContentAttr: аттрибут контанта табов
	callback: каллбэк







number - формат чисел
	https://www.customd.com/articles/14/jquery-number-format-redux
	$('.number').number( 2000.6156, 3, ',', '.' )
	$('.number').number( true, 2 )



animateNumber- анимация выставления числа
	$(selector).animateNumber({ number: 165 });
	https://github.com/aishek/jquery-animateNumber





mask - маска в поле ввода
	$(selector).mask('+7 (^^^) ^^^-^^-^^');
		'^': "[0-9\/\-_]",
        '&': "[A-Za-zА-Яа-яЁ]",
        '*': "[A-Za-zА-Яа-яёЁ0-9]"





mousewheel - событие прокрутки колесом мыши
	$(selector).mousewheel(function(e) {
		e.deltaX e.deltaY
	});




imgLoaded - каллбэк при загрузке картинки
	$(block)find('img').imgLoaded(function() {...});



lscache - библиотека кэширования данных в браузере
	https://github.com/pamelafox/lscache
	lscache.set(), get(), remove(), flush(), flushExpired(), setBucket(), resetBucket(), setExpiryMilliseconds().
	key (string)
	value (Object|string)
	time







ddrDragFiles - загрузка файлов путем перемещения их мышью
	dropZone:
	emptyDropHtml:
	fileTempHtml: '<i class="ddrdragfiles__loading fa fa-spinner fa-spin"></i>',
	dropItemHtml:
	itemsGridCls: 'dcol-2 dcol-sm-3 dcol-md-4 dcol-lg-5 dcol-xl-7',
	alreadyFiles: id name src checked
	alreadyFilesParams: параметры для запроса существующих файлов
	deleteAlready:
	disabled:
	accessTypes:
	maxFileSize: в мегабайтах
	nameLimit: лимит назавания картинки
	lang: 'ru',
	onInit:
	onDragHover:
	onDragLeave:
	onDrop: o.dropZone, countImages, lastIter, files
	onLoadItem: файл позиция порядковый номер файла
	onIsset: если есть хоть один уже загруженный файл
	filesData:






getRating - подключить рейтинг (звездочки)
    mark: оценка
    currentMark: указать количество уже выставленных оценок
    
    ----- постоянные параметры
    scale: шкала (бальность)
    readOnly: только для просмотра
    type: тип рейтинга (название поля)
    labelSize: размер лэйбла
    size: размер иконок рейтинга
    theme: тема (orange) берется из rating.css 
    icon: иконка без fa fa-
    showMarkOnLabel: показывать оценку на лэйбле
    showNums: номера под звездами
    onClick: событие при клике
    
    --- методы
    refresh: сбросить выставленный рейтинг
    error вывести ошибку
    getMark получить выставленную оценку









ddrPopUp - Модальное окно
	ddrPopUp(settings, callback);
	- опции
		- title: заголовок
		- width: ширина окна
		- html: контент
		- buttons: кнопки
		- closeByButton: закрывать только по кнопкам
		- close: заголовок кнопки "закрыть"
		- topClose: верхний крестик "закрыть"

	- методы
		- wait: окно в режиме ожидания
		- close: закрыть окно
		- setData: задать контент [url или строка, параметры (или false, если строка), ширина окна]
		- setTitle: задать заголовок
		- setButtons: задать кнопки [массив кнопок, кнопка "закрыть"]
		- setWidth: задать ширину окна
		- dialog: вывести диалог [диалог, заголовок "да", заголовок "нет", каллбэк]






Прокрутка страницы по клику на пункты меню
    (для работы необходим плагин scrollstop.js)

    для пунктов меню добавляется data-scroll-nav [data-scroll-hash]
    для блоков добавляется data-scroll-block с таким же значением, как у data-scroll-nav










sortable - сортировка перемещением мышью
	https://sortablejs.github.io/sortablejs/#simple-list




sortable touch-dnd
	http://rkusa.github.io/touch-dnd/sortable.html








//----------------------------------------------  функции работы с датой и временем



getTimeFromSeconds - получить данные времени из количества секунд
	getTimeFromSeconds(304) -> {w: 0, d: 0, h: 0, m: 5, s: 4}
	getTimeFromSeconds(304, true) -> 5 мин. 4 сек.
	- кол-во секунд






getDateFromUnix - Возвращает дату и время по UNIX метке времени
	getDateFromUnix(date.getTime(), false, 1)
	- UNIX время
	- вернуть со временем
	- формат месяца [0 - полное назв., 1 - сокращенное назв.]




encodeTimePoint - конвертирует маску времени в человекопонятный вид, к примеру m:3 - 3 месяца
	- маска m:3 y:1 h:4





ddrDatePicker - Вешает выбор даты на указанные селекторы
	- дата размещается в аттрибуте date <input date="вот тут" />

	- селектор инпута начала
    - селектор инпута окончания
    - диапазон (m:1 y:1 d:10)
    - сбрасывать значения полей при изменении инпута начала



















ddrCRUD - динамический список
 	Создается три шаблона: список (list.tpl), новая запись (new.tpl), и подстановочная запись после сохранения (saved.tpl)
	- в списке update и remove
	- в новой save
	- в подстановочной update remove

	В контроллере создается одна функция со свитчем: get add save update remove
	- get (список записей с тегами update и remove)
	- add (новая запись с тегом save)
	- save (передача полей (POST "fields" и "fields_to_item") с последующим выводом шаблона saved.tpl с тегами update и remove)
	- update (передача полей с последующим выводом статуса обновления)
	- remove (передача ID записи с последующим выводом статуса удаления)

	- Параметры
		- addSelector: false, // селектор для добавления новой записи
		- getListParams: {}, // параметры для получения списка данных
		- sortField: // поле сортировки в таблице
		- emptyList: '<p class="empty">Нет данных</p>', // Текст при пустом листе
		- functions: false, // PHP функции, например: account/personages/[get,add,save,update,remove]
		- confirms: {
			- add: false, // функция при добавлении записи
			- save: false, // функция при сохранении записи
			- update: false, // функция при обновлении записи
			- remove: false, // функция при удалении записи
		},
		- removeConfirm: false, // Запрашивать подтверждение перед удалением
		- listDirection: 'bottom', // направление списка: top bottom (добавление новой записи внизу или вверху)
		- popup: false // Если список в попап окне - указать объект окна








ddrChooseFile - input type file событие изменения поля, на выходе даные загружаемого файла
	- объект:
		- sync - срабатывать каллбэк на каждый файл или при загрузке всех файлов

	Возвращает данные файла:
		- имя
		- расширение
		- тип
		- размер
		- предзагруженную картинку base64 (если файл - изображение)






ddrUnitHeight - Единая высота для элементов блока
	- Высота берется от самого большого

	- элементы
	- задать минимальную высоту






ddrScrollX - Горизонтальная прокрутка блока мышью и колесиком
	- шаг прокрутки (для колеса)
	- скорость прокрутки (для колеса)
	- разрешить прокрутку колесом





ddrScrollTable - Горизонтальная прокрутка таблицы мышью
	- шаг прокрутки
	- скорость прокрутки
	- горизонтальная прокрутка колесом мыши
	- элемент для фиксации (по-умолчанию thead)
	- элементы при наведении на которые, прокрутки не будет



ddrScrollEnd - Событие прокрутки страницы до конца
	ddrScrollEnd(каллбэк, таймаут)
	$(selector).ddrScrollEnd(каллбэк, таймаут);

	- каллбэк
	- таймаут







ddrPagination - Постраничная навигация.
	Для начала, необходимо вывести пагинацию, затем, к ней подключить данный плагин
	$(selector).ddrPagination(ops);
		- Параметры
			- pItems: 'pagination', // Аттрибут, присваеваемый элементам пагинации
			- pRows: 'paginationrule', // Аттрибут, присваеваемый стрелкам со значениями:  prev next start end - назад, вперед, в начало, в конец соответственно
			- itemsAround: false, // Объект {брейкпоинт:количество}. Количество видимых элементов пагинации вокруг активного элемента. Если, например, 2 - то всего будет открыто 5 элементов.
			- storageId: 'ddrPagination'+random(0,999), // Идентификатор для localstorege чтобы запоминать последнюю активную страницу
			- activeClass: false, // класс, присваеваемый активному элементу пагинации
			- hiddenClass: false, // класс, присваеваемый скрытым лементам пагинации
			- onClickDisabled: 'disabled', // Аттрибут, который присваивается при клике на навигацию. Убирается при срабатывании callback функции onChangePage 
			- onChangePage: false // ID станицы и коллбэк










getCurrentBreakPoint - Получить текущий брейкпоинт
	- объект значений. Пример: {xs: значение 1, sm: значение 2, ...и т.д.} - вернет значение, соответствующее текущему брейпоинту
